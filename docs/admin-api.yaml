openapi: 3.0.0
info:
  title: Ebook Store API
  description: Ebook Store API
  version: 1.0.0
tags:
  - name: authorization
    description: Authorization of API
  - name: admins
    description: Admins
  - name: books
    description: Books
servers:
  - url: localhost:3000/
    description: Development server
paths:
  /admin/sign_up:
    post:
      tags:
       - authorization
      summary: Sign Up
      description: Sign Up.
      operationId: signUp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpResponse'
        400:
          description: Bab Request
        422:
          description: UnprocessableEntity
  /admin/sign_in:
    post:
      tags:
       - authorization
      summary: Sign In
      description: Sign In.
      operationId: signIn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInRequest'
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInResponse'
        400:
          description: Bab Request
        401:
          description: Unauthorized
  /admin/sign_out:
    delete:
      security:
        - Authorization: []
      tags:
       - authorization
      summary: Sign Out
      description: Sign Out.
      operationId: signOut
      responses:
        204:
          description: NoContent
  /admin/admins/:id:
    delete:
      security:
        - Authorization: []
      tags:
       - admins
      summary: Remove Admin User
      description: Remove Admin User.
      operationId: removeAdminUser
      responses:
        204:
          description: NoContent
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: NotFound
  /admin/books:
    post:
      security:
        - Authorization: []
      tags:
       - books
      summary: Create book
      description: Create book.
      operationId: createBopok
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBook'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        401:
          description: Unauthorized
        422:
          description: UnprocessableEntity
components:
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    SignUpRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          description: Info message
        password:
          type: string
          description: Info message
      example:
        email: user.test@gmail.com
        password: "123456"
    SignUpResponse:
      type: object
      properties:
        meta:
          type: object
          properties:
            info:
              type: string
              description: Success message
        data:
          type: object
      example:
        data: null
        meta:
          info: "User created with success."
    SignInRequest:
      type: object
      properties:
        user:
          type: object
          properties:
            email:
              type: string
              description: User email
            password:
              type: string
              description: User password
      example:
        user:
          email: user.test@gmail.com
          password: "123456"
    SignInResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            token:
              type: string
        meta:
          type: object
          description: JTW token
      example:
        data:
          token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI4Iiwic2NwIjoidXNlciIsImF1ZCI6bnVsbCwiaWF0IjoxNjIzODk5ODQyLCJleHAiOjE2MjM5MDM0NDIsImp0aSI6IjcxMzZhNzRhLTBjZTktNDIyMy1hMzFjLWU3NDhhZmU0MGUzNCJ9.oP9Ho5FZ44TeCT6687pDhBmUL-bWhHxCOuvd45_OJsg
        meta: {}
    CreateBook:
      type: object
      properties:
        book:
          type: object
          properties:
            name:
              type: string
              description: Name of book
            price:
              type: number
              description: Price of book
            description:
              type: string
              description: Description of book
            cover_url:
              type: string
              description: Book cover URL
            slug:
              type: string
              description: Slug of book
            isbn:
              type: string
              description: ISBN of book
            details:
              type: object
              description: Details of book (Hash content)
            category_id:
              type: string
              description: Category Id
            author_ids:
              type: array
              description: Ids of authors
              items:
                type: string
                description: Author Id
      example:
        book:
          name: "Rails API"
          price: 16.5
          description: "Developing a REST API in Rails on Rails"
          cover_url: "https://example.com/cover.jpg"
          slug: "rails-api"
          isbn: "1234567890323"
          details:
            edition: "1"
            year: 2121
          category_id: "5fead211-d89c-4448-8ca7-09af3f038c55"
          author_ids: ["5fead211-d89c-4448-8ca7-09af3f038c55"]
    Book:
      type: object
      properties:
        id:
          type: string
          description: Dd of book
        name:
          type: string
          description: Name of book
        price:
          type: number
          description: Price of book
        description:
          type: string
          description: Description of book
        cover_url:
          type: string
          description: Book cover URL
        slug:
          type: string
          description: Slug of book
        isbn:
          type: string
          description: ISBN of book
        details:
          type: object
          description: Details of book (Hash content)
        category_id:
          type: string
          description: Category Id
        author_ids:
          type: array
          description: Ids of authors
          items:
            type: string
            description: Author Id
        created_at:
          type: string
          format: date-time
          description: Datetime of creation
      example:
        book:
          id: "5fead211-d89c-4448-8ca7-09af3f038c55"
          name: "Rails API"
          price: 16.5
          description: "Developing a REST API in Rails on Rails"
          cover_url: "https://example.com/cover.jpg"
          slug: "rails-api"
          isbn: "1234567890323"
          details:
            edition: "1"
            year: 2121
          category_id: "5fead211-d89c-4448-8ca7-09af3f038c55"
          author_ids: ["5fead211-d89c-4448-8ca7-09af3f038c55"]
          created_at: "2024-05-09T18:45:10.493Z"
